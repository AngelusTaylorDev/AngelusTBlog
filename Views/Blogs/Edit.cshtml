@using AngelusTBlog.Services
@model AngelusTBlog.Models.Blog
@inject IImageService imageService

@{
    ViewData["Title"] = "Edit";
}

<div class="page-title-area bg-8 mt-4 mb-4 d-flex justify-content-center">
    <div class="container">
        <div class="page-title-content">
            <h2>@ViewData["Title"] Blog</h2>

            <div class="col-md-12 p-4">
                <form asp-action="Edit" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group mb-3">
                        <input asp-for="Name" class="form-control" placeholder="Name/>
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <textarea asp-for="Description" class="form-control" placeholder="Description"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <img class="img-fluid mb-3" width="300" src="@imageService.DecodeImage(@Model.ImageData, @Model.ImageType)" />
                        <input asp-for="Image" name="NewImage" type="file" class="form-control" />
                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div>
                    <div class="form-group p-3">
                        <button type="submit" class="default-btn btn-two">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
